// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using employee_task.Data;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(EmployeeDB))]
    [Migration("20230315190326_intialDB")]
    partial class intialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("employee_task.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            Name = "Male"
                        },
                        new
                        {
                            GenderId = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("employee_task.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Employee"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "HR Manger"
                        });
                });

            modelBuilder.Entity("employee_task.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirhthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("GenderId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("employee_task.Models.VacationBalance", b =>
                {
                    b.Property<int>("VacationBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("VacationBalanceId");

                    b.HasIndex("UserId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("vacation_balance");
                });

            modelBuilder.Entity("employee_task.Models.VacationRequest", b =>
                {
                    b.Property<int>("VacationRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("VacationRequestId");

                    b.HasIndex("UserId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("vacation_request");
                });

            modelBuilder.Entity("employee_task.Models.VacationType", b =>
                {
                    b.Property<int>("VacationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IntialValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VacationTypeId");

                    b.ToTable("vacation_type");

                    b.HasData(
                        new
                        {
                            VacationTypeId = 1,
                            IntialValue = 7,
                            Name = "Casual"
                        },
                        new
                        {
                            VacationTypeId = 2,
                            IntialValue = 14,
                            Name = "Schedule"
                        });
                });

            modelBuilder.Entity("employee_task.Models.User", b =>
                {
                    b.HasOne("employee_task.Models.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("employee_task.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("employee_task.Models.VacationBalance", b =>
                {
                    b.HasOne("employee_task.Models.User", "User")
                        .WithMany("VacationBalances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("employee_task.Models.VacationType", "VacationType")
                        .WithMany("VacationBalances")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("employee_task.Models.VacationRequest", b =>
                {
                    b.HasOne("employee_task.Models.User", "User")
                        .WithMany("VacationRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("employee_task.Models.VacationType", "VacationType")
                        .WithMany("VacationRequests")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("employee_task.Models.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("employee_task.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("employee_task.Models.User", b =>
                {
                    b.Navigation("VacationBalances");

                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("employee_task.Models.VacationType", b =>
                {
                    b.Navigation("VacationBalances");

                    b.Navigation("VacationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
